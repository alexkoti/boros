BOROS

=====================================================
no sistema do tampão, fazer perguntas e verificação
 - analytics
 - privacidade
 - debug do rodapé
 - 404.php e search.php
=====================================================

 - constantes: BOROS_CONSTANT_NAME
 - function: boros_function_name
 - class: borosClassName

=====================================================

 - URGENTE PERIGO!!! nos duplicate em meta_boxes, é preciso corrigir o lance de items com index numérico VS associativos, isso gera erro pois o a function update_element_config() não consegue achar as configs para recuperar
 
 - CONSTANTES do plugin child padronizadas, assim quando criar um novo plugin de job, já estarão prontas as constantes JOB_DIR, JOB_URL. E só criar as personalizadas caso usar mais de um child plugin no mesmo projeto
 
 - FRONTEND FORMS: array de mensagens pós-redirect: $messages_redirect = array( 1 => 'Dados salvos', 2 => 'Verificar as mensagens', 3 => 'Etc' );
 
 - FORM ELEMENTS : verificar o argumento callback_args em add_meta_box() - pode ser uma novidade útil para os elements
 - FORM ELEMENTS : criar um super modelo de defaults, incluindo :
					'name' = null // para evitar erro de name not set, nos casos de 'html' e 'sep' e qualquer element sem 'name'
					'save|skip_save' = true // para forms que apenas usam os dados enviados para alguma outra operação, e não necessitam salvar option ou meta
					multiplos callbacks de form, assim como já existe em cada elemento individual
					em caso de !isset($_POST['elem_name']), adicionar um padrão ao array que será manipulado, assim evita-se erros e verificações extras

 - ELEMENT DUPLICATE : ideia do ACF: adicionar um botão de (+) entre os elementos, para o novo seja adicionado em outro local que não seja o final da lista
 
 - ELEMENT DUPLICATE : ideia do ACF: escolher o texto do botão de adicionar elemento
 
 - FORM ELEMENTS : incorporar a funcionalidade de reload por ajax, usando como base o quotidiem > mover o processo de ajax|forms para o Boros
 
 - FORM ELEMENTS : taxonomy_radio > esse modelo de 'name' >>> tax_input[legenda] funcoina para gravar, mas não funciona para exibir. Depois de salvar o post o radio não fica selecionado
 
 - REPENSAR A ORGANIZAÇÃO DE PASTAS - TALVEZ passar os includes para a raiz do plugin

 - TALVEZ fazer um array de elements a ser usado, fazendo com que seja apenas feito includes e enqueues necessários.

 - modificar o array de configs de $elements para possibilitar callback de página, configurar submit, mensagens de erro, etc

 - REVISAR E UNIFICAR callbacks, skip_save e conditionals entre meta_box, option e term_meta
	- ao definir defaults para os elementos, eles não são acessados pela função de salvamento. É preciso que os defaults de elements possam ser transmitidos para o momento do save()
	- usar um padrão único de callbacks com array de sucesso, erro e config completa, com nome da function + argumentos

 - Na class BorosTermMeta, em add_term_meta_fields() e edit_term_meta_fields(), permitir adicionar grupos de elements, assim como em admin_pages - IMPORTANTE: possibilitar FALLBACK para configurações antigas

 - Criar filtro em form element para que se possa filtrar o 'std', passando como argumentos para o filtro $post, $term, $taxonomy, etc - conforme o contexto

 - mudar a class 'error' para 'form_element_error' em varios elementos
 
 - NONCES !!!!!!!!!!!!!!!!!!!!!!!!!!
 
 - DEPENDENCIES IN METABOX
 
 - SANITIZE
 
 - DUPLICATE ITENS
 
	IMPORTANTE: MUDAR PARA NON-UNIQUE POST_META/ MULTIPLE <<<<<< isso precisará ser modificado para deixar serializado em wp_option
 - WIDGETS
	- fazer includes a partir de array de configuração
	 - IDEIA: https://github.com/tommcfarlin/WordPress-Widget-Boilerplate
 - QTRANSLATE SUPPORT
 